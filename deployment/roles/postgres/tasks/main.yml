- name: Add postgres apt key
  apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc

- name: Add postgres apt repository
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ wheezy-pgdg main'
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '7'

- name: (jessie) Add postgres apt repository
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main'
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '8'

- name: ensure apt cache is up to date
  apt: update_cache=yes

- name: install libssl-dev from backports (jessie)
  apt: name=libssl-dev default_release=jessie-backports state=latest
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '8'

- name: install libssl-dev from backports (wheezy)
  apt: name=libssl-dev default_release=wheezy-backports state=latest
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '7'

- name: ensure packages are installed (wheezy)
  apt: name={{item}} default_release=wheezy-pgdg state=latest
  with_items:
      - postgresql-9.5
      - libpq-dev
      - python-psycopg2
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '7'

- name: ensure packages are installed (jessie)
  apt: name={{item}} default_release=jessie-pgdg state=latest
  with_items:
      - postgresql-9.5
      - libpq-dev
      - python-psycopg2
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '8'

- name: Ensure the PostgreSQL service is running
  service: name=postgresql
           state=started
           enabled=yes

# Note: postgres unix user has no password, but postgres db user has the password specified in {{ postgres_user_password }}
# since we are using TCP authentication in proxy project

- name: ensure manager has a role that can create databases
  postgresql_user: name=postgres password={{ postgres_user_password }} role_attr_flags=SUPERUSER,CREATEDB state=present
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true

- name: change listen_addresses to '*'
  lineinfile: dest=/etc/postgresql/9.5/main/postgresql.conf regexp="^#listen_addresses" line="listen_addresses = '*'" state=present backup=yes
  sudo: True
  notify:
    - restart postgresql

- name: change pg_hba.conf to allow docker hosts to connect
  lineinfile: dest=/etc/postgresql/9.5/main/pg_hba.conf line="host all all 172.0.0.1/8 md5" state=present create=True backup=yes
  sudo: True
  notify:
    - restart postgresql
